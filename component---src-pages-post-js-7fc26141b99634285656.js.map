{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/post.js"],"names":["Header","isMobile","useMediaQuery","query","style","width","height","position","top","left","padding","zIndex","backgroundColor","boxShadow","display","justifyContent","alignItems","Link","to","fontFamily","fontStyle","color","marginLeft","fontWeight","ProjectLink","url","target","rel","href","textDecoration","PostContent","node","title","images","description","date","videos","tag","borderRadius","flexDirection","marginBottom","tags","className","map","image","G","placeholder","getImage","borderBottom","alt","video","textAlign","src","file","controls","autoplay","loop","muted","playsinline","Nav","nodes","prevPostId","nextPostId","prevNode","find","n","contentful_id","nextNode","flexWrap","listStyle","RelatedPosts","thisTags","gridTemplateColumns","gridColumnGap","gridRowGap","targetNode","targetTags","related","forEach","thisTag","targetTag","isRelated","props","postId","pageContext","data","useStaticQuery","posts","card","thumb","margin","maxWidth","marginTop"],"mappings":"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","file":"component---src-pages-post-js-7fc26141b99634285656.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport \"../components/base.css\"\r\nimport SocialLinks from \"../components/sociallinks\"\r\nimport Tags from \"../components/tags\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport Footer from \"../components/footer\"\r\nimport PostLink from \"../components/postlink\"\r\nimport Seo from \"../components/seo\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\n\r\nfunction Header() {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 480px)\" })\r\n  return (\r\n    <header\r\n      style={{\r\n        width: \"100%\",\r\n        height: isMobile ? \"4rem\" : \"6rem\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        padding: isMobile ? \"0 5%\" : \"0 10%\",\r\n        zIndex: \"1\",\r\n        backgroundColor: \"#e8ebf0\",\r\n        boxShadow: \"0 0 4px #888\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Link to=\"/\">\r\n          <h2\r\n            style={{\r\n              fontFamily: \"Sigmar One\",\r\n              fontStyle: \"italic\",\r\n              color: \"#1F2937\",\r\n            }}\r\n          >\r\n            N\r\n          </h2>\r\n        </Link>\r\n        <SocialLinks\r\n          color={\"black\"}\r\n          marginLeft={isMobile ? \"1rem\" : \"4rem\"}\r\n          fontWeight={\"500\"}\r\n        />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction ProjectLink({ url }) {\r\n  return (\r\n    <div>\r\n      {url && (\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={url}\r\n          style={{\r\n            color: \"#1C2635\",\r\n            textDecoration: \"underline\",\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          Project Link\r\n        </a>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction PostContent({ node }) {\r\n  const { title, images, description, date, videos, url, tag } = node\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"0.3rem\",\r\n        padding: \"2rem\",\r\n      }}\r\n    >\r\n      <p>{date}</p>\r\n      <h2>{title}</h2>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          marginBottom: \"1rem\",\r\n        }}\r\n      >\r\n        <ProjectLink url={url} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Tags tags={tag} />\r\n      </div>\r\n\r\n      <div style={{ height: \"1rem\" }}></div>\r\n      <p className=\"description\">{description.description}</p>\r\n      <div style={{ height: \"1rem\" }}></div>\r\n\r\n      {images &&\r\n        images.map(image => {\r\n          return (\r\n            <GatsbyImage\r\n              className=\"thumb\"\r\n              placeholder=\"blurred\"\r\n              image={getImage(image)}\r\n              style={{\r\n                borderBottom: \"solid #aaa 1px\",\r\n                marginBottom: \"1rem\",\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          )\r\n        })}\r\n\r\n      {videos != null &&\r\n        videos.map(video => {\r\n          return (\r\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n              <video\r\n                src={video.file.url}\r\n                controls\r\n                autoplay\r\n                loop\r\n                muted\r\n                playsinline\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              ></video>\r\n            </div>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Nav({ nodes, prevPostId, nextPostId }) {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 480px)\" })\r\n  const prevNode = nodes.find(n => n.contentful_id === prevPostId)\r\n  const nextNode = nodes.find(n => n.contentful_id === nextPostId)\r\n\r\n  return (\r\n    <ul\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-between\",\r\n        listStyle: \"none\",\r\n        padding: \"1rem\",\r\n        textDecoration: \"underline\",\r\n      }}\r\n    >\r\n      <li>\r\n        {!isMobile && prevPostId && (\r\n          <Link to={\"/post/\" + prevPostId + \"/\"} rel=\"prev\">\r\n            ← {prevNode.title}\r\n          </Link>\r\n        )}\r\n      </li>\r\n      <li>\r\n        {nextPostId && (\r\n          <Link to={\"/post/\" + nextPostId + \"/\"} rel=\"next\">\r\n            {nextNode.title} →\r\n          </Link>\r\n        )}\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction isRelated(thisTags, targetTags) {\r\n  let related = false\r\n  thisTags.forEach(thisTag => {\r\n    targetTags.forEach(targetTag => {\r\n      if (thisTag === targetTag) {\r\n        related = true\r\n      }\r\n    })\r\n  })\r\n  return related\r\n}\r\n\r\nfunction RelatedPosts({ nodes, node }) {\r\n  const thisTags = node.tag\r\n\r\n  return (\r\n    <div>\r\n      <h2>Related posts</h2>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n          gridColumnGap: \"20px\",\r\n          gridRowGap: \"20px\",\r\n        }}\r\n      >\r\n        {nodes.map(targetNode => {\r\n          const targetTags = targetNode.tag\r\n          return (\r\n            targetNode.contentful_id !== node.contentful_id &&\r\n            isRelated(thisTags, targetTags) && <PostLink node={targetNode} />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Post(props) {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 480px)\" })\r\n  const postId = props.pageContext.contentful_id\r\n  const prevPostId = props.pageContext.prevPostId\r\n  const nextPostId = props.pageContext.nextPostId\r\n\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        posts: allContentfulPost(sort: { fields: date, order: DESC }) {\r\n          nodes {\r\n            id\r\n            contentful_id\r\n            images {\r\n              gatsbyImageData(width: 1000)\r\n            }\r\n            videos {\r\n              file {\r\n                url\r\n              }\r\n            }\r\n            title\r\n            date(formatString: \"yyyy / M\")\r\n            description {\r\n              description\r\n            }\r\n            url\r\n            thumb {\r\n              id\r\n              gatsbyImageData(width: 500, height: 300)\r\n              file {\r\n                url\r\n              }\r\n            }\r\n            tag\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const node = data.posts.nodes.find(n => n.contentful_id === postId)\r\n  if (!node) return null\r\n\r\n  return (\r\n    <>\r\n      <Seo\r\n        title={node.title}\r\n        card={`summary_large_image`}\r\n        image={`https:` + node.thumb.file.url}\r\n      />\r\n      <div\r\n        style={{\r\n          margin: isMobile ? \"0 5%\" : \"0 10%\",\r\n        }}\r\n      >\r\n        <Header />\r\n        <div\r\n          style={{\r\n            maxWidth: \"800px\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              marginTop: isMobile ? \"6rem\" : \"10rem\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <PostContent node={node} />\r\n            <Nav\r\n              nodes={data.posts.nodes}\r\n              prevPostId={prevPostId}\r\n              nextPostId={nextPostId}\r\n            />\r\n            <div style={{ height: \"4rem\" }}></div>\r\n\r\n            <RelatedPosts nodes={data.posts.nodes} node={node} />\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"],"sourceRoot":""}